<%= form_block "Metadata" do %>
    <%= f.input :title, hint: "For internal use only." %>
    <%= f.input :output_key, hint: "The key used to request this campaign. If multiple active campaigns have the same key, a random one will be selected." %>
    <%= f.input :domains, hint: "Comma-separated list of domains to allow access to this campaign.<br />Common examples: www.scpr.org, campaigns.scprdev.org, scprdev.org<br /><strong>If you leave this blank, it will load from any domain.</strong>".html_safe %>
<% end %>

<%= form_block "Markup" do %>
  <div style="border:1px solid #ddd;">
    <%= f.text_area :markup %>
  </div>

  <br>
  <div class="alert alert-info">
    Add a <code>.campaign-hide</code> element to the markup to allow a user to hide the campaign and set a cookie. The interaction and cookie are handled by scpr.org, all you need to do is add the markup for the element.
  </div>
<% end %>

<script>
  var editor = CodeMirror.fromTextArea(document.getElementById('visual_campaign_markup'), {
    mode: 'xml',
    htmlMode: true,
    lineNumbers: true,
    lineWrapping: true,
    theme: "eclipse"
  });
</script>

<%= form_block "Scheduling" do %>
    <div class="alert alert-info">
        To mark this campaign as inactive, leave these fields blank.<br />
        Setting the dates will automatically activate/deactivate this campaign based on these times.<br />
        If the start date is in the past and the end date blank, the campaign will be active indefinitely.
    </div>

    <%= f.input :starts_at, include_blank: true %>
    <%= f.input :ends_at, include_blank: true %>
<% end %>

<%= form_block "Cookies" do %>
  <div class="alert alert-info">
    The client may choose not to honor cookies or these fields. These fields are just suggestions for the client.
  </div>

  <%= f.input :cookie_key, hint: "The key for the cookie. Should be url-safe.<br />This should be unique for different campaigns. If you want to force-expire a cookie, just change this attribute.<br />Example: ctg2014-adClosed".html_safe %>
  <%= f.input :cookie_ttl_hours, label: "Cookie TTL Hours", hint: "The number of HOURS that the cookie should be valid for once set.<br />Note that for most clients, an empty TTL means the cookie should expire at the end of the sessions (eg. when the browser is closed).".html_safe, input_html: { class: "tiny" } %>
<% end %>
